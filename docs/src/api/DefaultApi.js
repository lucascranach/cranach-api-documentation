/**
 * Cranach API
 * API to retrieve data from the Lucas Cranach Archive 
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InventoryNumberGet200Response from '../model/InventoryNumberGet200Response';

/**
* Default service.
* @module api/DefaultApi
* @version 1.3
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the inventoryNumberGet operation.
     * @callback module:api/DefaultApi~inventoryNumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InventoryNumberGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single item
     * Returns the data of the item with the passed inventory number
     * @param {Object} inventoryNumber The inventory number of the item
     * @param {module:api/DefaultApi~inventoryNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InventoryNumberGet200Response}
     */
    inventoryNumberGet(inventoryNumber, callback) {
      let postBody = null;
      // verify the required parameter 'inventoryNumber' is set
      if (inventoryNumber === undefined || inventoryNumber === null) {
        throw new Error("Missing the required parameter 'inventoryNumber' when calling inventoryNumberGet");
      }

      let pathParams = {
        'inventory_number': inventoryNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InventoryNumberGet200Response;
      return this.apiClient.callApi(
        '/{inventory_number}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rootGet operation.
     * @callback module:api/DefaultApi~rootGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all items
     * @param {module:api/DefaultApi~rootGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rootGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
